##-------------------------------------------------------------------------------
##数据(状态)同步的解决方案（信号槽方案）
##Create by tyw66 at 2021-9-7
##-------------------------------------------------------------------------------
##问题：
##当某个组件使得整个系统的某个状态变化后，其余各个组件如何及时做出相应的变化响应。
##-------------------------------------------------------------------------------
##解决方案：
##系统状态改变的情形提炼成一个个信号，放在独立的一个公用模块中，
##运行过程中，各个模块通调用这个公用模块去发送相应信号。
##各个模块对象实现自己的槽函数，并去连接这些信号，做出相应的响应。
##注意[重要]：为了避免在对象的槽函数中改变状态导致又触发信号，这时需要把阻断对象的信号发送
##在槽函数开始时使用函数blockSignals(true)阻断.在槽函数响应结束时再恢复。
##
##信号槽传递的参数建议是QString或者QVariant
##-------------------------------------------------------------------------------
#定义源码文件
set(SOURCES  main.cpp
    mainwindow.h  mainwindow.cpp  mainwindow.ui
    signalhub.h   signalhub.cpp)

source_group(TREE "${CMAKE_CURRENT_SOURCE_DIR}" FILES ${SOURCES})

#添加可执行程序
add_executable(DataSync ${SOURCES})
